upstream mytardis {
    ip_hash;
{% for server in pillar['nginx_upstream_servers'] %}
    server {{ server['address'] }} {{ server['parameters'] }};
{% endfor %}
}

server {
    listen 80 default;

{% if salt['pillar.get']('nginx_ssl', False) %}
    server_name {{ salt['pillar.get']('nginx_ssl_server_name') }};
    rewrite ^ https://$server_name$request_uri? permanent;
{% else %}
    client_max_body_size 4G;
    keepalive_timeout 5;

    gzip on;
    gzip_proxied any;
    # MyTardis generates uncompressed archives, so compress them in transit
    gzip_types application/x-javascript application/json text/css text/html application/zip application/x-tar;
    gzip_min_length 1024;
    gzip_vary on;


    location / {
        include uwsgi_params;
        uwsgi_pass mytardis;
        # this is to solve centos 6 error:
        # upstream prematurely closed
        client_max_body_size 4G;
        client_body_buffer_size 8192k;
        proxy_connect_timeout 2000;
        proxy_send_timeout 2000;
        proxy_read_timeout 2000;
        uwsgi_read_timeout 2000;
    }

    location /static/ {
        alias {{ mytardis_dir }}/static/;
    }
{% endif %}
}

{% if salt['pillar.get']('nginx_ssl', False) %}
{% set ssldir = salt['pillar.get']('nginx_ssl_dir', "/etc/ssl") %}
server {
    listen 443 ssl;
    server_name {{ salt['pillar.get']('nginx_ssl_server_name') }};

    ssl_certificate {{ssldir}}/{{ salt['pillar.get']('nginx_ssl_server_name') }}.crt;
    ssl_certificate_key {{ssldir}}/{{ salt['pillar.get']('nginx_ssl_server_name') }}.key;
    ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNull:!MD5;

    client_max_body_size 4G;
    keepalive_timeout 5;

    gzip on;
    gzip_proxied any;
    # MyTardis generates uncompressed archives, so compress them in transit
    gzip_types application/x-javascript application/json text/css text/html application/zip application/x-tar;
    gzip_min_length 1024;
    gzip_vary on;


    location / {
        include uwsgi_params;
        uwsgi_pass mytardis;
        # this is to solve centos 6 error:
        # upstream prematurely closed
        client_max_body_size 4G;
        client_body_buffer_size 8192k;
        proxy_connect_timeout 2000;
        proxy_send_timeout 2000;
        proxy_read_timeout 2000;
        uwsgi_read_timeout 2000;
    }

    location /static/ {
        alias {{ mytardis_dir }}/static/;
    }
}
{% endif %}
